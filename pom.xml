<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Copyright 2019 https://github.com/romeoblog/spring-cloud.git Group.
  ~
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.cloud.mesh</groupId>
    <artifactId>mesh-parent</artifactId>
    <version>${revision}</version>
    <modules>
        <module>mesh-common</module>
        <module>mesh-core</module>
        <module>mesh-entity</module>
        <module>mesh-enums</module>
        <module>mesh-model</module>
        <module>mesh-eureka</module>
        <module>mesh-gateway</module>
        <module>mesh-gateway-zuul</module>
        <module>mesh-auth-server</module>
        <module>mesh-boot-admin</module>
        <module>mesh-service</module>
        <module>mesh-docs</module>
        <module>mesh-generator</module>
        <module>mesh-api</module>
        <module>mesh-test</module>
        <module>mesh-demo</module>
        <module>mesh-mq</module>
        <module>mesh-modules</module>
        <module>mesh-config</module>
    </modules>
    <packaging>pom</packaging>
    <name>Mesh Parent POM ${project.version}</name>
    <url>https://github.com/romeoblog/spring-cloud.git</url>
    <description>top mesh project pom.xml file</description>
    <prerequisites>
        <maven>3.2.5</maven>
    </prerequisites>

    <!-- 开发者信息-->
    <developers>
        <developer>
            <id>Benji</id>
            <name>Zhengweilu</name>
            <url>https://my.oschina.net/u/3747226</url>
            <email>willlu.zheng@163.com</email>
        </developer>
        <developer>
            <id>willlu.zheng</id>
            <name>willlu.zheng</name>
            <url>blog.willlu.cn</url>
            <email>willluzheng@gmail.com</email>
        </developer>
    </developers>

    <organization>
        <name>Mesh</name>
        <url>https://github.com/romeoblog</url>
    </organization>

    <scm>
        <url>git@github.com:romeoblog/spring-cloud.git</url>
        <connection>scm:git@github.com:romeoblog/spring-cloud.git</connection>
        <developerConnection>scm:git@github.com:romeoblog/spring-cloud.git</developerConnection>
    </scm>

    <profiles>
        <!-- The type default (Environment) -->
        <profile>
            <id>default</id>
            <properties>
                <dockerfile-skip>true</dockerfile-skip>
                <log-home>/var/log/mesh</log-home>
                <docker-tag>${project.version}</docker-tag>
                <docker-repository>romeoblog-default/${project.artifactId}</docker-repository>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!-- The type develop (Environment) -->
        <profile>
            <id>develop</id>
            <properties>
                <dockerfile-skip>false</dockerfile-skip>
                <log-home>/var/log/mesh</log-home>
                <docker-tag>latest</docker-tag>
                <docker-repository>romeoblog-develop/${project.artifactId}</docker-repository>
            </properties>
        </profile>
        <!-- The type internal (Environment) -->
        <profile>
            <id>internal</id>
            <properties>
                <dockerfile-skip>false</dockerfile-skip>
                <log-home>/var/log/mesh</log-home>
                <docker-tag>${project.version}</docker-tag>
                <docker-repository>registry.cn-shenzhen.aliyuncs.com/romeoblog-internal/${project.artifactId}</docker-repository>
            </properties>
        </profile>
        <!-- The type product (Environment) -->
        <profile>
            <id>product</id>
            <properties>
                <dockerfile-skip>false</dockerfile-skip>
                <log-home>/var/log/mesh</log-home>
                <docker-tag>${project.version}</docker-tag>
                <docker-repository>registry.cn-shenzhen.aliyuncs.com/romeoblog-product/${project.artifactId}</docker-repository>
            </properties>
        </profile>
        <!-- The type docker hub (Environment) -->
        <profile>
            <id>hub</id>
            <properties>
                <dockerfile-skip>false</dockerfile-skip>
                <log-home>/var/log/mesh</log-home>
                <docker-tag>${project.version}</docker-tag>
                <docker-repository>romeoblog/${project.artifactId}</docker-repository>
            </properties>
        </profile>

        <!-- Profiles Spring Snapshot -->
        <profile>
            <id>spring</id>
            <repositories>
                <repository>
                    <id>spring-snapshot</id>
                    <name>Spring Snapshot Repository</name>
                    <url>https://repo.spring.io/snapshot</url>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                    <releases>
                        <enabled>false</enabled>
                    </releases>
                </repository>
                <repository>
                    <id>spring-snapshots</id>
                    <name>Spring Snapshots</name>
                    <url>https://repo.spring.io/libs-snapshot-local</url>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>
                <repository>
                    <id>spring-milestones</id>
                    <name>Spring Milestones</name>
                    <url>https://repo.spring.io/libs-milestone-local</url>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>
                <repository>
                    <id>spring-releases</id>
                    <name>Spring Releases</name>
                    <url>https://repo.spring.io/release</url>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>
                <!-- SpringCloud Alibaba Maven snapshots -->
                <repository>
                    <id>sonatype-snapshot</id>
                    <url>http://oss.sonatype.org/content/repositories/snapshots</url>
                    <releases>
                        <enabled>false</enabled>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <id>spring-snapshot</id>
                    <name>Spring Snapshot Repository</name>
                    <url>https://repo.spring.io/snapshot</url>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                    <releases>
                        <enabled>false</enabled>
                    </releases>
                </pluginRepository>
                <pluginRepository>
                    <id>spring-snapshots</id>
                    <name>Spring Snapshots</name>
                    <url>https://repo.spring.io/libs-snapshot-local</url>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </pluginRepository>
                <pluginRepository>
                    <id>spring-milestones</id>
                    <name>Spring Milestones</name>
                    <url>https://repo.spring.io/libs-milestone-local</url>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </pluginRepository>
                <pluginRepository>
                    <id>spring-releases</id>
                    <name>Spring Releases</name>
                    <url>https://repo.spring.io/libs-release-local</url>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </pluginRepository>
            </pluginRepositories>
        </profile>

    </profiles>

    <properties>

        <!-- parent version -->
        <!--<revision>5.1.0.SNAPSHOT</revision>-->
        <revision>5.2.0.SNAPSHOT</revision>

        <!-- encoding、jdk -->
        <encoding>UTF-8</encoding>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>

        <!-- spring -->
        <spring.version>5.1.5.RELEASE</spring.version>
        <spring-boot.version>2.1.5.RELEASE</spring-boot.version>
        <springloaded.version>1.2.7.RELEASE</springloaded.version>
        <spring-cloud.version>Greenwich.SR2</spring-cloud.version>
        <spring-security-jwt.version>1.0.10.RELEASE</spring-security-jwt.version>
        <java-jwt.version>3.8.1</java-jwt.version>
        <spring-boot-admin-server.version>2.1.2</spring-boot-admin-server.version>
        <platform-bom.version>Cairo-SR8</platform-bom.version>
        <mysql-connector-java.version>8.0.11</mysql-connector-java.version>
        <mybatis-plus.version>2.1.2</mybatis-plus.version>
        <springfox.version>2.9.2</springfox.version>
        <redis.clients.version>2.8.2</redis.clients.version>
        <druid.version>1.1.6</druid.version>
        <druid-spring-boot-starter.version>1.1.10</druid-spring-boot-starter.version>
        <spring-boot-starter-jdbc.version>${spring-boot.version}</spring-boot-starter-jdbc.version>
        <spring-boot-starter-data-redis.version>${spring-boot.version}</spring-boot-starter-data-redis.version>
        <spring-boot-starter-log4j2.version>${spring-boot.version}</spring-boot-starter-log4j2.version>
        <spring-boot-starter-test.version>${spring-boot.version}</spring-boot-starter-test.version>
        <spring-boot-starter-data-redis-reactive.version>${spring-boot.version}</spring-boot-starter-data-redis-reactive.version>
        <mybatisplus-spring-boot-starter.version>1.0.4</mybatisplus-spring-boot-starter.version>
        <mybatis-spring-boot-starter.version>1.3.1</mybatis-spring-boot-starter.version>
        <jasypt-spring-boot-starter.version>2.1.1</jasypt-spring-boot-starter.version>

        <!-- components -->
        <spring-cloud-alibaba.version>2.1.2.RELEASE</spring-cloud-alibaba.version>
        <nacos-client.version>1.3.0</nacos-client.version>
        <seata.version>1.1.0</seata.version>
        <sentinel.version>1.7.0</sentinel.version>
        <alibaba-ahas-sentinel.version>1.0.2</alibaba-ahas-sentinel.version>
        <rocketmq.version>4.5.1</rocketmq.version>
        <elasticsearch.version>7.3.0</elasticsearch.version>
        <canal.version>1.1.3</canal.version>
        <quartz.version>2.3.0</quartz.version>

        <!-- plugin -->
        <maven-compiler-plugin.version>3.6.2</maven-compiler-plugin.version>
        <maven-jar-plugin.version>3.0.1</maven-jar-plugin.version>
        <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
        <maven-dependency-plugin.version>3.0.2</maven-dependency-plugin.version>
        <maven-source-plugin.version>3.0.1</maven-source-plugin.version>
        <maven-resources-plugin.version>3.0.1</maven-resources-plugin.version>
        <cobertura-maven-plugin.version>2.7</cobertura-maven-plugin.version>
        <checkstyle.version>8.4</checkstyle.version>
        <findbugs-maven-plugin.version>3.0.5</findbugs-maven-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
        <maven-javadoc-plugin.version>3.0.0-M1</maven-javadoc-plugin.version>
        <maven-maven-plugin.version>2.0.1.RELEASE</maven-maven-plugin.version>
        <flatten-maven-plugin.version>1.1.0</flatten-maven-plugin.version>
        <license-maven-plugin.version>3.0</license-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.3</jacoco-maven-plugin.version>
        <p3c-pmd.version>1.3.6</p3c-pmd.version>
        <maven-checkstyle-plugin.version>3.0.0</maven-checkstyle-plugin.version>
        <!--<dockerfile-maven-plugin.version>1.4.10</dockerfile-maven-plugin.version>-->
        <dockerfile-maven-plugin.version>1.3.6</dockerfile-maven-plugin.version>

        <!-- tools-->
        <jackson.version>2.9.9</jackson.version>
        <commons-beanutils.version>1.9.3</commons-beanutils.version>
        <commons-lang3.version>3.6</commons-lang3.version>
        <guava.version>28.0-jre</guava.version>
        <gson.version>2.8.2</gson.version>
        <hutool.version>3.1.2</hutool.version>
        <velocity-engine.version>2.0</velocity-engine.version>
        <slf4j.version>1.7.25</slf4j.version>
        <logback-classic.version>1.2.0</logback-classic.version>
        <commons-dbutils.version>1.7</commons-dbutils.version>
        <fastjson.version>1.2.59</fastjson.version>
        <dbunit.version>2.5.0</dbunit.version>
        <cglib.version>3.3.0</cglib.version>
        <esotericsoftware-reflectasm.version>1.11.9</esotericsoftware-reflectasm.version>

        <!-- other -->
        <junit.version>4.12</junit.version>
        <javax.servlet-api.version>4.0.1</javax.servlet-api.version>
        <swagger-bootstrap-ui.version>1.6</swagger-bootstrap-ui.version>
        <swagger-models.version>1.5.22</swagger-models.version>
        <lombok.version>1.18.6</lombok.version>

    </properties>

    <!--<repositories>
        <repository>
            <id>spring-snapshot</id>
            <name>Spring Snapshot Repository</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>-->

    <!-- 用来支持项目发布到私服中,用来配合deploy插件的使用 -->
    <distributionManagement>
        <repository>
            <id>nexus</id>
            <name>Releases</name>
            <url>http://192.168.0.150:8081/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>nexus</id>
            <name>Snapshot</name>
            <url>http://192.168.0.150:8081/repository/maven-snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <dependencyManagement>
        <dependencies>

            <!-- Spring Boot Dependencies -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Spring Cloud Dependencies -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Spring Cloud Alibaba Dependencies-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-jwt</artifactId>
                <version>${spring-security-jwt.version}</version>
            </dependency>

            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${java-jwt.version}</version>
            </dependency>

            <!-- Model -->
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>mesh-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>mesh-entity</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>mesh-enums</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>mesh-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>mesh-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>mesh-api</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- Data Source -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jdbc</artifactId>
                <version>${spring-boot-starter-jdbc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring-boot-starter-data-redis.version}</version>
            </dependency>

            <!-- Test -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot-starter-test.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-spring-boot-starter</artifactId>
                <version>${jasypt-spring-boot-starter.version}</version>
            </dependency>

            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-server</artifactId>
                <version>${spring-boot-admin-server.version}</version>
            </dependency>

            <!-- Mybatis -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatisplus-spring-boot-starter</artifactId>
                <version>${mybatisplus-spring-boot-starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>

            <!-- Logger -->
            <!--<dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-log4j2</artifactId>
                <version>${spring-boot-starter-log4j2.version}</version>
            </dependency>-->

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback-classic.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <!-- Commons -->
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-dbutils</groupId>
                <artifactId>commons-dbutils</artifactId>
                <version>${commons-dbutils.version}</version>
            </dependency>

            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>${cglib.version}</version>
            </dependency>

            <dependency>
                <groupId>com.esotericsoftware</groupId>
                <artifactId>reflectasm</artifactId>
                <version>${esotericsoftware-reflectasm.version}</version>
            </dependency>

            <!-- dbunit -->
            <dependency>
                <groupId>org.dbunit</groupId>
                <artifactId>dbunit</artifactId>
                <version>${dbunit.version}</version>
            </dependency>

            <!-- Jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.xiaoleilu</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity-engine.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!-- Alibaba Nacos -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.alibaba.nacos</groupId>
                        <artifactId>nacos-client</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.alibaba.nacos</groupId>
                        <artifactId>nacos-client</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.alibaba.nacos</groupId>
                <artifactId>nacos-client</artifactId>
                <version>${nacos-client.version}</version>
            </dependency>

            <!-- Alibaba Seata -->
<!--            <dependency>-->
<!--                <groupId>com.alibaba.cloud</groupId>-->
<!--                <artifactId>spring-cloud-starter-alibaba-seata</artifactId>-->
<!--                <version>${spring-cloud-alibaba.version}</version>-->
<!--                <exclusions>-->
<!--                    <exclusion>-->
<!--                        <groupId>io.seata</groupId>-->
<!--                        <artifactId>seata-all</artifactId>-->
<!--                    </exclusion>-->
<!--                </exclusions>-->
<!--            </dependency>-->
            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-spring-boot-starter</artifactId>
                <version>${seata.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.seata</groupId>
                        <artifactId>seata-all</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-all</artifactId>
                <version>${seata.version}</version>
            </dependency>

            <!-- Alibaba Sentinel -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-core</artifactId>
                <version>${sentinel.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-spring-cloud-gateway-adapter</artifactId>
                <version>${sentinel.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-datasource-nacos</artifactId>
                <version>${sentinel.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-transport-simple-http</artifactId>
                <version>${sentinel.version}</version>
            </dependency>

            <!-- Alibaba AHAS -->
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>spring-cloud-gateway-starter-ahas-sentinel</artifactId>
                <version>${alibaba-ahas-sentinel.version}</version>
            </dependency>

            <!-- Apache RocketMQ -->
            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-client</artifactId>
                <version>${rocketmq.version}</version>
            </dependency>

            <!-- Elasticsearch -->
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>

            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>

            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-client</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet-api.version}</version>
            </dependency>

            <!-- Alibaba Canal -->
            <dependency>
                <groupId>com.alibaba.otter</groupId>
                <artifactId>canal.client</artifactId>
                <version>${canal.version}</version>
            </dependency>

            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
            </dependency>

            <!-- Swagger UI -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <exclusions>
                    <exclusion>
                        <groupId>io.swagger</groupId>
                        <artifactId>swagger-models</artifactId>
                    </exclusion>
                </exclusions>
                <version>${springfox.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-models</artifactId>
                <version>${swagger-models.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>swagger-bootstrap-ui</artifactId>
                <version>${swagger-bootstrap-ui.version}</version>
            </dependency>

            <!-- Lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.5.0.Final</version>
            </extension>
        </extensions>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.springframework</groupId>
                            <artifactId>springloaded</artifactId>
                            <version>${springloaded.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- 编码规约扫描命令： mvn pmd:pmd-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.8</version>
                <configuration>
                    <sourceEncoding>${encoding}</sourceEncoding>
                    <minimumPriority>2</minimumPriority>
                    <printFailingErrors>true</printFailingErrors>
                    <rulesets>
                        <ruleset>rulesets/java/ali-comment.xml</ruleset>
                        <ruleset>rulesets/java/ali-concurrent.xml</ruleset>
                        <ruleset>rulesets/java/ali-constant.xml</ruleset>
                        <ruleset>rulesets/java/ali-exception.xml</ruleset>
                        <ruleset>rulesets/java/ali-flowcontrol.xml</ruleset>
                        <ruleset>rulesets/java/ali-naming.xml</ruleset>
                        <ruleset>rulesets/java/ali-oop.xml</ruleset>
                        <ruleset>rulesets/java/ali-orm.xml</ruleset>
                        <ruleset>rulesets/java/ali-other.xml</ruleset>
                        <ruleset>rulesets/java/ali-set.xml</ruleset>
                    </rulesets>
                </configuration>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.alibaba.p3c</groupId>
                        <artifactId>p3c-pmd</artifactId>
                        <version>${p3c-pmd.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven-plugin.version}</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${license-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>remove</goal>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <quiet>true</quiet>
                    <header>${user.dir}/style/copyright</header>
                    <includes>
                        <include>**/src/main/java/**</include>
                        <include>**/src/test/java/**</include>
                    </includes>
                    <strictCheck>true</strictCheck>
                    <mapping>
                        <java>SLASHSTAR_STYLE</java>
                    </mapping>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <configLocation>${user.dir}/style/dg_checkstyle.xml</configLocation>
                            <encoding>${encoding}</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>false</failsOnError>
                            <failOnViolation>false</failOnViolation>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>build</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>${dockerfile-skip}</skip>
                    <repository>${docker-repository}</repository>
                    <tag>${docker-tag}</tag>
                    <buildArgs>
                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                        <LOG_HOME>${log-home}</LOG_HOME>
                    </buildArgs>
                    <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>